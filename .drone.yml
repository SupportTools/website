---
kind: pipeline
type: vm
name: SupportTools-www

platform:
  os: linux
  arch: amd64

clone:
  depth: 1

environment:
  DOCKER_HOST: tcp://docker-in-docker:2375
  DOCKER_CLI_EXPERIMENTAL: enabled

steps:
  - name: Waiting for Docker to start
    image: cube8021/docker-buildx:20.10.14-0.8.2
    commands:
    - echo 'Waiting for docker to start...'
    - while ! docker info; do sleep 1; done
    when:
      event:
        - push
        - pull_request

  - name: hugo-test-build
    image: thegeeklab/hugo
    commands:
      - cd blog/
      - hugo --panicOnWarning --baseUrl http://localhost/
      - mv public/ ../../
    when:
      event:
        - push
        - pull_request

  - name: html-validation
    image: thegeeklab/vnu
    commands:
      - vnu --skip-non-html --errors-only --filterfile .vnuignore public/
    when:
      event:
        - push
        - pull_request

  # - name: link-validation
  #   image: thegeeklab/link-validator
  #   commands:
  #     - link-validator --nice --external --skip-file .linkcheckignore
  #   environment:
  #     LINK_VALIDATOR_BASE_DIR: public

  - name: cleanup-test-build
    image: thegeeklab/hugo
    commands:
      - rm -rf public
    when:
      event:
        - push
        - pull_request

  - name: Docker Build
    image: cube8021/docker-buildx:20.10.14-0.8.2
    environment:
      DOCKER_USERNAME:
        from_secret: harbor-username
      DOCKER_PASSWORD:
        from_secret: harbor-password
    commands:
    commands:
    - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD harbor.support.tools
    - sh ./build-docker-images.sh
    when:
      repo:
        included:
          - supporttools/website
      event:
        - push
        - pull_request

  - name: Deploy-to-Master
    image: supporttools/kube-builder:latest
    environment:
      DOCKER_USERNAME:
        from_secret: harbor-username
      DOCKER_PASSWORD:
        from_secret: harbor-password
      CATTLE_SERVER:
        from_secret: cattle_server
      CATTLE_ACCESS_KEY:
        from_secret: cattle_accesskey
      CATTLE_SECRET_KEY:
        from_secret: cattle_secretkey        
    commands:
      - bash deploy.sh
    when:
      event:
        - push
        - pull_request
      repo:
        included:
          - supporttools/website

  - name: Deploy-to-Dev
    image: supporttools/kube-builder:latest
    environment:
      DOCKER_USERNAME:
        from_secret: harbor-username
      DOCKER_PASSWORD:
        from_secret: harbor-password
      CATTLE_SERVER:
        from_secret: cattle_server
      CATTLE_ACCESS_KEY:
        from_secret: cattle_accesskey
      CATTLE_SECRET_KEY:
        from_secret: cattle_secretkey        
    commands:
      - bash deploy.sh dev ${BUILD_NUMBER}
    when:
     event:
     - deployment
     - promote
     target:
     - dev
     repo:
       included:
         - supporttools/website

  - name: Deploy-to-QAS
    image: supporttools/kube-builder
    environment:
      DOCKER_USERNAME:
        from_secret: harbor-username
      DOCKER_PASSWORD:
        from_secret: harbor-password
      CATTLE_SERVER:
        from_secret: cattle_server
      CATTLE_ACCESS_KEY:
        from_secret: cattle_accesskey
      CATTLE_SECRET_KEY:
        from_secret: cattle_secretkey    
      AWS_ACCESS_KEY_ID:
        from_secret: s3_accesskey
      AWS_SECRET_ACCESS_KEY:
        from_secret: s3_secretkey
    commands:
      - bash deploy.sh qas ${BUILD_NUMBER}
    when:
     event:
     - deployment
     - promote
     target:
     - qas
     repo:
       included:
         - supporttools/website

  - name: Deploy-to-TST
    image: supporttools/kube-builder
    environment:
      DOCKER_USERNAME:
        from_secret: harbor-username
      DOCKER_PASSWORD:
        from_secret: harbor-password
      CATTLE_SERVER:
        from_secret: cattle_server
      CATTLE_ACCESS_KEY:
        from_secret: cattle_accesskey
      CATTLE_SECRET_KEY:
        from_secret: cattle_secretkey        
      AWS_ACCESS_KEY_ID:
        from_secret: s3_accesskey
      AWS_SECRET_ACCESS_KEY:
        from_secret: s3_secretkey
    commands:
      - bash deploy.sh tst ${BUILD_NUMBER}
    when:
     event:
     - deployment
     - promote
     target:
     - tst
     repo:
       included:
         - supporttools/website

  - name: Deploy-to-Staging
    image: supporttools/kube-builder
    environment:
      DOCKER_USERNAME:
        from_secret: harbor-username
      DOCKER_PASSWORD:
        from_secret: harbor-password
      CATTLE_SERVER:
        from_secret: cattle_server
      CATTLE_ACCESS_KEY:
        from_secret: cattle_accesskey
      CATTLE_SECRET_KEY:
        from_secret: cattle_secretkey        
      AWS_ACCESS_KEY_ID:
        from_secret: s3_accesskey
      AWS_SECRET_ACCESS_KEY:
        from_secret: s3_secretkey
    commands:
      - bash deploy.sh stg ${BUILD_NUMBER}
    when:
     event:
     - deployment
     - promote
     target:
     - stg
     repo:
       included:
         - supporttools/website

  - name: Deploy-to-Production
    image: supporttools/kube-builder
    environment:
      DOCKER_USERNAME:
        from_secret: harbor-username
      DOCKER_PASSWORD:
        from_secret: harbor-password
      CATTLE_SERVER:
        from_secret: cattle_server
      CATTLE_ACCESS_KEY:
        from_secret: cattle_accesskey
      CATTLE_SECRET_KEY:
        from_secret: cattle_secretkey        
    commands:
      - bash deploy.sh prd ${BUILD_NUMBER}
    when:
     event:
     - deployment
     - promote
     target:
     - prd
     repo:
       included:
         - supporttools/website

  - name: Sync-to-CDN
    image: plugins/s3-sync
    settings:
      access_key:
        from_secret: s3_accesskey
      secret_key:
        from_secret: s3_secretkey
      region: us-east-1
      bucket: cdn.support.tools
      endpoint: https://s3.us-east-1.wasabisys.com
      source: cdn.support.tools/
      target: /
      delete: false
    when:
     event:
     - deployment
     - promote
     target:
     - prd
     repo:
       included:
         - supporttools/website

services:
- name: docker-in-docker
  docker:
  image: docker:20.10.14-dind
  command: ["dockerd", "--host", "0.0.0.0", "--experimental"]
  privileged: true
  when:
    event:
      - push
      - pull_request