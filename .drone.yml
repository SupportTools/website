---
kind: pipeline
type: docker
name: Support.Tools

platform:
  os: linux
  arch: amd64

clone:
  depth: 1

environment:
  DOCKER_HOST: tcp://docker-in-docker:2375
  DOCKER_CLI_EXPERIMENTAL: enabled

services:
- name: docker-in-docker
  docker:
  image: docker:19.03.12-dind
  command: ["dockerd", "--host", "0.0.0.0", "--experimental"]
  privileged: true

steps:
- name: Docker Build
  image: ncrmro/docker-buildx:19.03.10
  commands:
  - docker version
  - docker buildx version
  - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
  - docker buildx create --name multiarch --use
  - docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 --dry-run -f Dockerfile .

- name: Docker Publish
  image: ncrmro/docker-buildx:19.03.10
  environment:
    DOCKER_USERNAME:
      from_secret: harbor-username
    DOCKER_PASSWORD:
      from_secret: harbor-password
  commands:
  - docker version
  - docker buildx version
  - docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD} harbor.support.tools
  - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
  - docker buildx create --name multiarch --use
  - docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 -t harbor.support.tools/supporttools/website:latest -t harbor.support.tools/supporttools/website:${DRONE_BUILD_NUMBER} -t harbor.support.tools/supporttools/website:$DRONE_COMMIT_SHA --push -f Dockerfile .
  when:
    event:
    - deployment
    - promote

- name: Customize-kube-files
  image: supporttools/kube-builder:32
  pull: always
  environment:
    APPENV: ${DRONE_COMMIT_BRANCH}
  commands:
    - bash ./deploy.sh

- name: Deploy-to-Dev
  image: supporttools/kube-builder:latest
  pull: always
  settings:
    kubernetes_server:
      from_secret: k8s_server
    kubernetes_token:
      from_secret: k8s_token
  commands:
    - if ! kubectl get ns supporttools-website-dev; then kubectl create ns supporttools-website-dev; fi
    - if ! kubectl -n supporttools-website-dev get rolebinding system-unrestricted-psp-role-default; then kubectl -n supporttools-website-dev create rolebinding system-unrestricted-psp-role-default --clusterrole=system-unrestricted-psp-role --serviceaccount=supporttools-website-dev:default; fi
    - kubectl apply -n supporttools-website-dev -f /drone/src/deployment-ready/
    - kubectl apply -n supporttools-website-dev -f /drone/src/deployment/ingress/dev.yaml
    - kubectl scale -n supporttools-website-dev deployments/www --replicas=1
  when:
   event:
   - deployment
   - promote
   target:
   - dev

- name: Deploy-to-Staging
  image: supporttools/kube-builder:latest
  pull: always
  settings:
    kubernetes_server:
      from_secret: k8s_server
    kubernetes_token:
      from_secret: k8s_token
  commands:
    - if ! kubectl get ns supporttools-website-staging; then kubectl create ns supporttools-website-staging; fi
    - if ! kubectl -n supporttools-website-staging get rolebinding system-unrestricted-psp-role-default; then kubectl -n supporttools-website-staging create rolebinding system-unrestricted-psp-role-default --clusterrole=system-unrestricted-psp-role --serviceaccount=supporttools-website-staging:default; fi
    - kubectl apply -n supporttools-website-staging -f /drone/src/deployment-ready/
    - kubectl apply -n supporttools-website-staging -f /drone/src/deployment/ingress/staging.yaml
    - kubectl scale -n supporttools-website-staging deployments/www --replicas=3
  when:
   event:
   - deployment
   - promote
   target:
   - staging

- name: Deploy-to-Production
  image: supporttools/kube-builder:latest
  pull: always
  settings:
    kubernetes_server:
      from_secret: k8s_server
    kubernetes_token:
      from_secret: k8s_token
  commands:
    - if ! kubectl get ns supporttools-website-production; then kubectl create ns supporttools-website-production; fi
    - if ! kubectl -n supporttools-website-production get rolebinding system-unrestricted-psp-role-default; then kubectl -n supporttools-website-production create rolebinding system-unrestricted-psp-role-default --clusterrole=system-unrestricted-psp-role --serviceaccount=supporttools-website-production:default; fi
    - kubectl apply -n supporttools-website-production -f /drone/src/deployment-ready/
    - kubectl apply -n supporttools-website-production -f /drone/src/deployment/ingress/production.yaml
    - kubectl scale -n supporttools-website-production deployments/www --replicas=5
  when:
   event:
   - deployment
   - promote
   target:
   - production

node_selector:
  beta.kubernetes.io/arch: amd64
  drone-runner: true