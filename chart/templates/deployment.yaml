apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels:
    app: website
    team: SupportTools
    component: website
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: website
      team: SupportTools
      component: website
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate      
  template:
    metadata:
      labels:
        app: website
        team: SupportTools
        component: website
    spec:
      imagePullSecrets:
        - name: harbor-registry-secret
      securityContext:
        runAsUser: 1000
        runAsGroup: 3000
        fsGroup: 2000
      containers:
        - name: website
          image: "{{ .Values.image.repository }}/website:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
          - name : nginx-cache
            mountPath: /var/cache/nginx/
          - name : nginx-config
            mountPath: /var/config/nginx/
          - name: var-run
            mountPath: /var/run/          
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
      volumes:
      - emptyDir: {}
        name: nginx-cache
      - emptyDir: {}
        name: nginx-config
      - emptyDir: {}
        name: var-run