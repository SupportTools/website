apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-cache
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '9000'
    prometheus.io/path: '/metrics'
  labels:
    app: website
    component: web-cache
    team: SupportTools
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: website
      component: web-cache
      team: SupportTools
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate      
  template:
    metadata:
      labels:
        app: website
        component: web-cache
        team: SupportTools
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9000'
        prometheus.io/path: '/metrics'
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: website
                  component: web-cache
                  team: SupportTools
              topologyKey: "kubernetes.io/hostname"    
      imagePullSecrets:
      - name: dockerhub-supporttools
      containers:
        - name: go-web-cache
          image: docker.io/supporttools/go-web-cache:latest
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: DEBUG
              value: 'true'
            - name: METRICS_PORT
              value: '9000'
            - name: BACKEND_SERVER
              value: http://website
            - name: BACKEND_PORT
              value: '8080'
            - name: FRONTEND_PORT
              value: '8080'              
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: metrics
              containerPort: 9000
              protocol: TCP
            - name: admin
              containerPort: 9001
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: admin
          readinessProbe:
            httpGet:
              path: /
              port: admin
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi
